networks:
  default:
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: fdae:7bc2:9d65:c579::/64
        - subnet: 172.28.0.0/16

services:
  vaultwarden:
    image: vaultwarden/server
    container_name: vaultwarden
    restart: always
    environment:
      DOMAIN: "https://pass.cy.sh"
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
      LOG_FILE: /data/vaultwarden.log
      TZ: America/Toronto
      PUSH_ENABLED: true
      PUSH_INSTALLATION_ID: ${PUSH_INSTALLATION_ID}
      PUSH_INSTALLATION_KEY: ${PUSH_INSTALLATION_KEY}
    volumes:
      - /vw-data:/data

  caddy:
    image: caddy:2
    container_name: caddy
    restart: always
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-config:/config
      - ./caddy-data:/data
      - ./website/public:/blogroot
    environment:
      LOG_FILE: "/data/access.log"

  adguard:
    image: adguard/adguardhome
    container_name: adguard
    restart: always
    environment:
      TZ: America/Toronto
    ports:
      - 53:53
      - 53:53/udp
      - 853:853
      - 853:853/udp
    volumes:
      - /home/crash/adguardhome/work:/opt/adguardhome/work
      - /home/crash/adguardhome/conf:/opt/adguardhome/conf

  linkding:
    image: sissbruecker/linkding:latest
    container_name: linkding
    restart: always
    environment:
      LD_LOG_X_FORWARDED_FOR: True
    volumes:
      - /opt/linkding/data:/etc/linkding/data

  anki-server:
    build:
      context: .
      dockerfile: anki.Dockerfile
    container_name: anki-server
    restart: always
    environment:
      SYNC_USER1: ${ANKI_USER}
      SYNC_HOST: 0.0.0.0
      SYNC_PORT: 80
      SYNC_IP_HEADER: XRealIp
      SYNC_BASE: /data
    volumes:
      - /opt/anki:/data

  miniflux:
    image: miniflux/miniflux:latest
    container_name: miniflux
    restart: always
    depends_on:
      miniflux_db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://miniflux:secret@miniflux_db/miniflux?sslmode=disable
      RUN_MIGRATIONS: 1
      CREATE_ADMIN: 1
      ADMIN_USERNAME: cy
      ADMIN_PASSWORD: ${MINIFLUX_PASS}
      BASE_URL: https://rss.cy7.sh/
      HTTPS: on

  miniflux_db:
    image: postgres:15
    container_name: miniflux_db
    restart: always
    environment:
      POSTGRES_USER: miniflux
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: miniflux
    volumes:
      - /opt/miniflux:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${IMMICH_UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE_NAME: immich
      DB_HOSTNAME: immich_db
      # IMMICH_WORKERS_INCLUDE: api
    depends_on:
      - immich_db
      - redis
    restart: always
    healthcheck:
      disable: false
    ports:
      - 2283:2283

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:2ba50e1ac3a0ea17b736ce9db2b0a9f6f8b85d4c27d5f5accc6a416d8f42c6d5
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich_db:
    container_name: immich_db
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${IMMICH_DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='immich_db' --username='postgres' || exit 1; Chksum="$$(psql --dbname='immich_db' --username='postgres' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      [
        'postgres',
        '-c',
        'shared_preload_libraries=vectors.so',
        '-c',
        'search_path="$$user", public, vectors',
        '-c',
        'logging_collector=on',
        '-c',
        'max_wal_size=2GB',
        '-c',
        'shared_buffers=512MB',
        '-c',
        'wal_compression=on',
      ]
    # ports:
    #   - 5432:5432
    restart: always
