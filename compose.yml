networks:
  default:
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: 2001:db8::/64
        - subnet: 172.28.0.0/16

services:
  vaultwarden:
    image: vaultwarden/server
    container_name: vaultwarden
    restart: always
    environment:
      DOMAIN: "https://pass.trashcan.app"
      SIGNUPS_ALLOWED: "true"
      SMTP_HOST: smtp.mail.me.com
      SMTP_FROM: ${SMTP_FROM}
      SMTP_PORT: 587
      SMTP_SECURITY: starttls
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
      LOG_FILE: /data/vaultwarden.log
      TZ: America/Toronto
      PUSH_ENABLED: true
      PUSH_INSTALLATION_ID: ${PUSH_INSTALLATION_ID}
      PUSH_INSTALLATION_KEY: ${PUSH_INSTALLATION_KEY}
    volumes:
      - /vw-data:/data

  caddy:
    build:
      context: .
      dockerfile: caddy.Dockerfile
    container_name: caddy
    restart: always
    ports:
      - 80:80
      - 443:443
      - 443:443/udp # Needed for HTTP/3.
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-config:/config
      - ./caddy-data:/data
    environment:
      LOG_FILE: "/data/access.log"

  adguard:
    image: adguard/adguardhome
    container_name: adguard
    restart: always
    environment:
      TZ: America/Toronto
    ports:
      - 53:53
      - 53:53/udp
      - 853:853
      - 853:853/udp
    volumes:
      - /home/crashtan/adguardhome/work:/opt/adguardhome/work
      - /home/crashtan/adguardhome/conf:/opt/adguardhome/conf

  linkding:
    image: sissbruecker/linkding:latest
    container_name: linkding
    restart: always
    environment:
      LD_LOG_X_FORWARDED_FOR: True
    volumes:
      - /opt/linkding/data:/etc/linkding/data

  forgejo:
    image: codeberg.org/forgejo/forgejo:8
    container_name: forgejo
    restart: always
    environment:
      USER_UID: 1001
      USER_GID: 1001
    ports:
      - 127.0.0.1:2222:22
    volumes:
      - /opt/forgejo:/data
      - /home/git/.ssh:/data/git/.ssh
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  anki-server:
    build:
      context: .
      dockerfile: anki.Dockerfile
    container_name: anki-server
    restart: always
    environment:
      SYNC_USER1: ${ANKI_USER}
      SYNC_HOST: 0.0.0.0
      SYNC_PORT: 80
      SYNC_IP_HEADER: XRealIp
      SYNC_BASE: /data
    volumes:
      - /opt/anki:/data

  miniflux:
    image: miniflux/miniflux:latest
    container_name: miniflux
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://miniflux:secret@db/miniflux?sslmode=disable
      RUN_MIGRATIONS: 1
      CREATE_ADMIN: 1
      ADMIN_USERNAME: cy
      ADMIN_PASSWORD: ${MINIFLUX_PASS}
      BASE_URL: https://rss.cy7.sh/
      HTTPS: on
 
  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: miniflux
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: miniflux
    volumes:
      - /opt/miniflux:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
